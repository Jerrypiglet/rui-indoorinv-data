data = {
    dataset_root = data/real
    xml_root = data/real
}

scene_params_dict = {
    scene_name = ""
    shape_file = "" # relative to dataset_root
    frame_id_list = []
    invalid_frame_id_list = [] # corresponding to the number in the filename; does not have to be 0-indexed
    invalid_frame_idx_list = [] # 0-indexed
    scene_radiance_scale = 1.0
    axis_up = "y+"
    }

im_params_dict = {
    im_H_load_hdr = 512
    im_W_load_hdr = 768
    im_H_load_sdr = 512
    im_W_load_sdr = 768
    im_H_load = 512
    im_W_load = 768

    im_H_resize = 256
    im_W_resize = 384
    }

modality_filename_dict = {
    im_hdr = merged_images/img_%04d.exr 
    im_sdr = png_images/img_%04d.png 
}

cam_params_dict = {
    near = 0.1
    far = 2
    if_sample_poses = False
}

lighting_params_dict = {
    SG_num = 12

    # how many envmaps of one frame
    env_row = 8
    env_col = 16 # resolution to load; FIXED
    env_downsample_rate = 2 # (8, 16) -> (4, 8)
    
    # how many pixels in one envmap
    # 'env_height': 2, 'env_width': 4, 
    # 'env_height': 8, 'env_width': 16, 
    # 'env_height': 128, 'env_width': 256, 
    env_height = 256
    env_width = 512
}

mi_params_dict = {
    debug_render_test_image = True # [DEBUG][slow] True: to render an image with first camera, usig Mitsuba: images/demo_mitsuba_render.png
    debug_dump_mesh = True # [DEBUG] True: to dump all object meshes to mitsuba/meshes_dump; load all .ply files into MeshLab to view the entire scene: images/demo_mitsuba_dump_meshes.png
    if_sample_rays_pts = True # True: to sample camera rays and intersection pts given input mesh and camera poses
    if_get_segs = False # [depend on if_sample_rays_pts] True: to generate segs similar to those in openroomsScene2D.load_seg()

}

shape_params_dict = {
    if_load_obj_mesh = True # set to False to not load meshes for objs (furniture) to save time
    if_load_emitter_mesh = True  # default True: to load emitter meshes, because not too many emitters

    if_sample_pts_on_mesh = False  # default True: sample points on each shape -> self.sample_pts_list
    sample_mesh_ratio = 0.1 # target num of VERTICES: len(vertices) * sample_mesh_ratio
    sample_mesh_min = 10
    sample_mesh_max = 100

    if_simplify_mesh = False # default True: simply triangles
    simplify_mesh_ratio = 0.1 # target num of FACES: len(faces) * simplify_mesh_ratio
    simplify_mesh_min = 100
    simplify_mesh_max = 1000
    if_remesh = True # False: images/demo_shapes_3D_kitchen_NO_remesh.png; True: images/demo_shapes_3D_kitchen_YES_remesh.png
    remesh_max_edge = 0.15
    
    if_dump_shape = False # True to dump fixed shape to obj file
    if_fix_watertight = False
}