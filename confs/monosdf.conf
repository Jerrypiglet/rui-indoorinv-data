data = {
    # dataset_root = data/real
    # xml_root = data/real
}

scene_params_dict = {
    scene_name = ""
    shape_file = "scene.obj" # NOT-normalized: in original scene scale
    pose_file = "cameras.npz"
    scale_mat_file = "scale_mat.npy"
    frame_id_list = []
    invalid_frame_id_list = [] # corresponding to the number in the filename; does not have to be 0-indexed
    invalid_frame_idx_list = [] # 0-indexed
    scene_radiance_scale = 1.0
    axis_up = "y+"
    }

im_params_dict = {
    # differs for each dataset
    }

modality_filename_dict = {
    im_hdr = Image/%03d_0001.exr
    im_sdr = Image/%03d_0001.png
    im_mask = ImMask/%03d_0001.png
    mi_depth = MiDepth/%03d_0001.npy
    mi_normal = MiNormalGlobal/%03d_0001.npy
    depth = depth/%03d_0001.npy
    normal = normal/%03d_0001.npy
}

cam_params_dict = {
    near = 0.1
    far = 2
    if_sample_poses = False
}

mi_params_dict = {
    debug_render_test_image = False # [DEBUG][slow] True: to render an image with first camera, usig Mitsuba: images/demo_mitsuba_render.png
    debug_dump_mesh = False # [DEBUG] True: to dump all object meshes to mitsuba/meshes_dump; load all .ply files into MeshLab to view the entire scene: images/demo_mitsuba_dump_meshes.png
    if_sample_rays_pts = True # True: to sample camera rays and intersection pts given input mesh and camera poses
    if_get_segs = True # [depend on if_sample_rays_pts] True: to generate segs similar to those in openroomsScene2D.load_seg()
}

shape_params_dict = {
    tsdf_file = fused_tsdf.ply # 'test_files/tmp_tsdf.ply', 
    
    if_load_obj_mesh = True # set to False to not load meshes for objs (furniture) to save time
    if_load_emitter_mesh = True  # default True: to load emitter meshes, because not too many emitters

    if_sample_pts_on_mesh = False  # default True: sample points on each shape -> self.sample_pts_list
    sample_mesh_ratio = 0.1 # target num of VERTICES: len(vertices) * sample_mesh_ratio
    sample_mesh_min = 10
    sample_mesh_max = 100

    if_simplify_mesh = False # default True: simply triangles
    simplify_mesh_ratio = 0.1 # target num of FACES: len(faces) * simplify_mesh_ratio
    simplify_mesh_min = 100
    simplify_mesh_max = 1000
    if_remesh = True # False: images/demo_shapes_3D_kitchen_NO_remesh.png; True: images/demo_shapes_3D_kitchen_YES_remesh.png
    remesh_max_edge = 0.15
    
    if_dump_shape = False # True to dump fixed shape to obj file
    if_fix_watertight = False
}